{
	"compiler": {
		"version": "0.5.17+commit.d19bba13"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": true,
				"inputs": [],
				"name": "DATA_PROVIDER_REVISION",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "HEALTH_FACTOR_LIQUIDATION_THRESHOLD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "addressesProvider",
				"outputs": [
					{
						"internalType": "contract GlobalAddressesProvider",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "_instrument",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "balanceDecreaseAllowed",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "_instrument",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_userCurrentBorrowBalanceTH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_userCurrentFeesETH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_userCurrentLtv",
						"type": "uint256"
					}
				],
				"name": "calculateCollateralNeededInETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "calculateUserGlobalData",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalLiquidityBalanceETH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalCollateralBalanceETH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalBorrowBalanceETH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalFeesETH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "currentLtv",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "currentLiquidationThreshold",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "healthFactor",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "healthFactorBelowThreshold",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "core",
				"outputs": [
					{
						"internalType": "contract ILendingPoolCore",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getHealthFactorLiquidationThreshold",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "_instrument",
						"type": "address"
					}
				],
				"name": "getInstrumentConfigurationData",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "ltv",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidationThreshold",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidationBonus",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "rateStrategyAddress",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "usageAsCollateralEnabled",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "borrowingEnabled",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "stableBorrowRateEnabled",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "isActive",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "_instrument",
						"type": "address"
					}
				],
				"name": "getInstrumentData",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalLiquidity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "availableLiquidity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalBorrowsStable",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalBorrowsVariable",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidityRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "variableBorrowRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "stableBorrowRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "averageStableBorrowRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "utilizationRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidityIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "variableBorrowIndex",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "iTokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint40",
						"name": "lastUpdateTimestamp",
						"type": "uint40"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getUserAccountData",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalLiquidityETH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalCollateralETH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalBorrowsETH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalFeesETH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "availableBorrowsETH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "currentLiquidationThreshold",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "ltv",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "healthFactor",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "_instrument",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getUserInstrumentData",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "currentITokenBalance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "currentBorrowBalance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "principalBorrowBalance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrowRateMode",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrowRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidityRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrowFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "variableBorrowIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastUpdateTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "usageAsCollateralEnabled",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract GlobalAddressesProvider",
						"name": "_addressesProvider",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Aave, SIGH Finance ",
			"methods": {
				"balanceDecreaseAllowed(address,address,uint256)": {
					"details": "check if a specific balance decrease is allowed (i.e. doesn't bring the user borrow position health factor under 1e18)",
					"params": {
						"_amount": "the amount to decrease",
						"_instrument": "the address of the instrument",
						"_user": "the address of the user"
					},
					"return": "true if the decrease of the balance is allowed*"
				},
				"calculateCollateralNeededInETH(address,uint256,uint256,uint256,uint256,uint256)": {
					"params": {
						"_amount": "the amount the user wants to borrow",
						"_fee": "the fee for the amount that the user needs to cover",
						"_instrument": "the instrument from which the user wants to borrow",
						"_userCurrentBorrowBalanceTH": "the current global borrow balance of the user (before the borrow)",
						"_userCurrentLtv": "the average ltv of the user given his current collateral (before the borrow)"
					},
					"return": "the total amount of collateral in ETH to cover the current borrow balance + the new amount + fee*"
				},
				"calculateUserGlobalData(address)": {
					"details": "calculates the user data across the instruments. this includes the total liquidity/collateral/borrow balances in ETH, the average Loan To Value, the average Liquidation Ratio, and the Health factor.",
					"params": {
						"_user": "the address of the user"
					},
					"return": "the total liquidity, total collateral, total borrow balances of the user in ETH. also the average Ltv, liquidation threshold, and the health factor*"
				},
				"getInstrumentConfigurationData(address)": {
					"details": "accessory functions to fetch data from the lendingPoolCore*"
				}
			},
			"title": "LendingPoolDataProvider contract "
		},
		"userdoc": {
			"methods": {
				"calculateCollateralNeededInETH(address,uint256,uint256,uint256,uint256,uint256)": {
					"notice": "calculates the amount of collateral needed in ETH to cover a new borrow."
				}
			},
			"notice": "Implements functions to fetch data from the core, and aggregate them in order to allow computation on the compounded balances and the account balances in ETH*"
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/LendingProtocolContracts/lendingpool/LendingPoolDataProvider.sol": "LendingPoolDataProvider"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/contracts/LendingProtocolContracts/interfaces/IFeeProvider.sol": {
			"keccak256": "0x3cd7a7b585a53d125c730a79dbe8e0eed5e2910dcff87dd5451c578e7aac0972",
			"urls": [
				"bzz-raw://fae503d55caf63360e4a415c4154ce17ec74def417f426dbff166a2ee7b22219",
				"dweb:/ipfs/QmQgxc2iEP8PML14aYhgnVXT9fLLDGktdNhiHfVJTsuGQY"
			]
		},
		"localhost/contracts/LendingProtocolContracts/interfaces/ILendingPoolCore.sol": {
			"keccak256": "0xd9c64ec38fa73c1666f8be7a689c5878e79ce5aac8711ca22d3db79526629724",
			"urls": [
				"bzz-raw://1c1ebd3f4b19a6e067aeb36441b4bbd7119e026e47606e5229ab34a507aa869d",
				"dweb:/ipfs/QmWSKwTMfXHm1iLjiFamFTbUDASR1a8udFRF23UdDzTabX"
			]
		},
		"localhost/contracts/LendingProtocolContracts/interfaces/IPriceOracleGetter.sol": {
			"keccak256": "0xaf5b0d8b1553c9b0156137e52056fcc361833ee8787bf9ea9c1a3084af85c736",
			"urls": [
				"bzz-raw://ad0a65a23599a537335b5b8a78f7a27d1df654f74479b2b299bdf789e4fd0ba9",
				"dweb:/ipfs/QmUf7RmuJDPSidxTAv4upEFCCzHNTCemhZZk73rNB6subg"
			]
		},
		"localhost/contracts/LendingProtocolContracts/interfaces/ITokenInterface.sol": {
			"keccak256": "0x09a2d282d165d47ee92974987cc0bb6dc91a45b7f711521c363182fd5cab284c",
			"urls": [
				"bzz-raw://291ada200de9369914d68eb35879c0b534eac38d26894ca8fa8db2648e4c1048",
				"dweb:/ipfs/QmaYiFwWbzkDEMqoG3wGGaNZYQWHwVbc5wBf8pYuM5oC4D"
			]
		},
		"localhost/contracts/LendingProtocolContracts/lendingpool/LendingPoolDataProvider.sol": {
			"keccak256": "0x9501e117b22fd867615347b9736060ab613842b9c23d171ad738a89e6863160d",
			"urls": [
				"bzz-raw://74e0878014e8ecec7571b7374ca01de27490237dcb9d841ce0813909e125f120",
				"dweb:/ipfs/Qmb3pfCSGq5jKKf8AWNLVG7htsJXapXdBNb855CCqpmVUB"
			]
		},
		"localhost/contracts/LendingProtocolContracts/libraries/CoreLibrary.sol": {
			"keccak256": "0xd3fe57263bcab96f887842d408d267494d03767132f9a2d06105278a4eae02b1",
			"urls": [
				"bzz-raw://e9073f82d5f6eab6617381567c972456e0437caee46664e6e5f4b9bc3c92bbb4",
				"dweb:/ipfs/QmdFXZVpWvixJbGP6sFnXxeJxXhGj3rDfB7cmmGbj7QS6U"
			]
		},
		"localhost/contracts/LendingProtocolContracts/libraries/WadRayMath.sol": {
			"keccak256": "0xdecb27b23892c48ef8ff2e63de656c06b1abd745f6bd0e8f91f203d32cf00cd7",
			"urls": [
				"bzz-raw://1c57032f9ee17dddf672e68d5142011c06f5b8b2379f3c9f63ab77232ffd86e1",
				"dweb:/ipfs/QmeZie4G7caYQsuFbaVqt3YRnrr2s42VAgVHeW1WAq3BRh"
			]
		},
		"localhost/contracts/configuration/AddressStorage.sol": {
			"keccak256": "0x0d0b40ccc403e45861faf71d042f5c419ff51930a45896633052c91b7ed6eae4",
			"urls": [
				"bzz-raw://ad8c170f6b3b87ec85076f3fdcd006fcef61ef47c978a9da8971df22682cf657",
				"dweb:/ipfs/QmRWUQzdk7GHfcyrPzE6vw9ipfrW6Kiq1Jyp9xzbWqmv5p"
			]
		},
		"localhost/contracts/configuration/GlobalAddressesProvider.sol": {
			"keccak256": "0x67e342721ca253f34cde0609cb93eb92b23b3ebd9f8fbd49394177fba368b03b",
			"urls": [
				"bzz-raw://2c611ba95e8e2740c2f590ba2824477509430b898443e46ad33ec7ef5ad47dff",
				"dweb:/ipfs/QmU26JJD9ZDz683TEnAHZkCYNofVpfg2QdUfKNcsFctuHx"
			]
		},
		"localhost/contracts/configuration/IGlobalAddressesProvider.sol": {
			"keccak256": "0x30385d394fe30ea120fd04ef3d9f3e6006a90d08c6795ed9b3c586fb98a56512",
			"urls": [
				"bzz-raw://433194f95571c81d390832741a81d152e40c540722354e4f3c914d83600983a4",
				"dweb:/ipfs/QmPwRF6AHfvUqco3YP9XZCe818juptqY5UUD75XQwmqg5u"
			]
		},
		"localhost/contracts/openzeppelin-upgradeability/BaseAdminUpgradeabilityProxy.sol": {
			"keccak256": "0x6bb623c8fe336eeba953283dbe3014ab18e882d3a3f27f38234672a5a69885d1",
			"urls": [
				"bzz-raw://2810308c8de3ef8291356ea30e866a0b20e2729223caffc43b0f6513f7b0aaeb",
				"dweb:/ipfs/QmT6AD9CxgeeUndEj6F6z9zd8eJLDxUxJcHekcBRGop3ch"
			]
		},
		"localhost/contracts/openzeppelin-upgradeability/BaseUpgradeabilityProxy.sol": {
			"keccak256": "0x99e393b97e79374c0dd133282f83ac48f15777d3894eafb9257768a1bf7acff5",
			"urls": [
				"bzz-raw://1c9d283b3442e71b7c611f8f79e792b248d97e1502a14d8507f131161b288f8b",
				"dweb:/ipfs/QmWxuFrfdLHmhJrpoGwHRujeV6zpdFydVM1DY3N5RBwNs5"
			]
		},
		"localhost/contracts/openzeppelin-upgradeability/InitializableAdminUpgradeabilityProxy.sol": {
			"keccak256": "0x7928dfc5736d1ec6a29672f41458b7de688ef2d0ec31b3e4a16e6bc554b87df1",
			"urls": [
				"bzz-raw://712ce2645eeb72c5c12e40ef1e04f7161ab9f8aaae3413b82f6a1b48956d6c38",
				"dweb:/ipfs/QmcTNBeHbqBUj2UUgNob1s22oMjj4UpcLMNdXTBC2m1b6p"
			]
		},
		"localhost/contracts/openzeppelin-upgradeability/InitializableUpgradeabilityProxy.sol": {
			"keccak256": "0x46052d95ea9b770116913041555f808f1b099c0a35e5c7ecbfc04ffef64a83bd",
			"urls": [
				"bzz-raw://67c2cacee01c1c8972a195be9f018abeae6917f45e45a4dc22b462fbb148150f",
				"dweb:/ipfs/QmZhM5vvrvjFbTXjzYDB3ZTtNbTf3j54v76SZoDSbFTjdU"
			]
		},
		"localhost/contracts/openzeppelin-upgradeability/Proxy.sol": {
			"keccak256": "0xd8dcdaaf2f03c606a569d91506958bf78df9adfb41df76727857e5dfe956e872",
			"urls": [
				"bzz-raw://1d780033022b07478621ce08cd4e668603fc899ae3212a883eea23347937e8d5",
				"dweb:/ipfs/QmVZkBHpdDjko87qT4597e3UZ5uYdrEfPYbamEjBep52Se"
			]
		},
		"localhost/contracts/openzeppelin-upgradeability/UpgradeabilityProxy.sol": {
			"keccak256": "0x5829b59012f64d1ce3ae6b98a61ddf5d6daa6e6f1a54e336ce910c8afd415c69",
			"urls": [
				"bzz-raw://28cba7d1f3d67aab91a4f88df4cb63762b443c31cb62a87e957add0b43dc8e1a",
				"dweb:/ipfs/QmUXzpQDBXA2xGSNRqjn3VMJ3o8RXmpATieU9ovvk6QDAD"
			]
		},
		"localhost/contracts/openzeppelin-upgradeability/VersionedInitializable.sol": {
			"keccak256": "0x3f7fa91853dcdf84684887deaa056f5b3803b46e7efb71704dcc625a63eeac55",
			"urls": [
				"bzz-raw://c7b50d4feda87e8875541afeb44f802ab539272bfb22f7c7da84c3d26e03a266",
				"dweb:/ipfs/QmdSYn9D1Q3FRXRNDLYGGFoYb8rsN4U2MYdxciuZBTSg83"
			]
		},
		"openzeppelin-solidity/contracts/math/SafeMath.sol": {
			"keccak256": "0x7f293e2ee29a32416531a0bf3da9972358887c45ec1836642ec8e700cc152ba0",
			"urls": [
				"bzz-raw://e6ca40872864cb64a2dcc1b4f0be6a3cfc406f363e045fa7991f9f22f6257a63",
				"dweb:/ipfs/QmdsPdEayCcUa1fg3YTbhTPn3GTcjfNYZqnwf9EDC3QGpp"
			]
		},
		"openzeppelin-solidity/contracts/utils/Address.sol": {
			"keccak256": "0x58543a8d0f0fc465618566ee6b3c04071965cd26ba20d1de3f9768014ed807e4",
			"urls": [
				"bzz-raw://f060c6ee3ca16eb001823e2c0f8b642ecf3ead486721bab6f6be5220158d4421",
				"dweb:/ipfs/QmWv1ms6aLAfjZ49dNnffbg49XiKmuEWHeu4wi6EinkEek"
			]
		}
	},
	"version": 1
}